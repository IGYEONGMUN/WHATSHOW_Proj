@import "../../styles/variables.scss";
@import "../../styles/reset.scss";
@import "../../styles/mixin.scss";

@import url("https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@100..900&display=swap");

html {
  font-size: 62.5%;
}

body {
  font-family: map-get($map: $font, $key: noto);
  font-size: 1.6rem;
  background-color: map-get($map: $color, $key: dark);
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  min-width: 100%;
  overflow: hidden;
}

@media screen and (min-width: 1200px) and (max-width: 1920px) {
  .lsi-find-id-container {
    width: 500px;
    padding: 2rem;
    text-align: center;

    h1 {
      font-size: 4rem;
      color: map-get($map: $color, $key: main);
      margin-bottom: 4rem;
    }

    .lsi-find-section {
      margin-bottom: 4rem;
      text-align: left;

      h2 {
        font-size: 2.4rem;
        margin-bottom: 1rem;
        color: map-get($map: $color, $key: btn-bg);
      }

      p {
        font-size: 1.2rem;
        margin-bottom: 2rem;
        color: map-get($map: $color, $key: btn-bg);
      }

      input[type="text"] {
        @include inputText();
        width: 100%;
        margin-bottom: 10px;
        &:focus {
          border: 1px solid map-get($map: $color, $key: main);
          outline: none;
        }
      }
      .error-message {
        display: none;
        font-size: 1.2rem;
        margin-top: 10px;
        line-height: 1px;
        color: map-get($map: $color, $key: error);
      }

      .lsi-find-btn {
        @include findBtn();
        width: 100%;
        &:hover {
          color: map-get($map: $color, $key: light);
        }
      }
    }

    .lsi-separator {
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 1.6rem;
      color: map-get($map: $color, $key: main);
      margin: 6rem 0;
      gap: 15px;

      &::before,
      &::after {
        content: "";
        flex: 1;
        height: 1px;
        background-color: map-get($map: $color, $key: main);
        margin: 0 5px;
      }
    }
  }
  /* 모달 배경 */
  .auth-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5); /* 어두운 배경 */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 1000;
  }

  /* 모달 컨텐츠 */
  .auth-modal-content {
    background: map-get($map: $color, $key: light);
    padding: 20px;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
    text-align: center;
    width: 300px;
    opacity: 1;
  }

  .modal-title {
    margin-bottom: 10px;
  }
  .modal-text {
    font-size: 1.2rem;
  }

  .auth-modal-content input {
    width: 100%;
    padding: 8px;
    margin: 5px 0;
    border: 1px solid map-get($map: $color, $key: btn-bg);
    border-radius: 5px;
  }

  .auth-modal-content button {
    width: 100%;
    padding: 10px;
    margin-top: 10px;
    background: map-get($map: $color, $key: main);
    color: map-get($map: $color, $key: dark);
    border: none;
    border-radius: 5px;
    cursor: pointer;
  }

  .close {
    background: map-get($map: $color, $key: main);
  }
}

@media screen and (max-width: 1180px) {
  .lsi-find-id-container {
    width: 400px;
    padding: 2rem;

    h1 {
      color: map-get($map: $color, $key: main);
      font-size: 3rem;
      margin-bottom: 3rem;
      text-align: center;
    }

    .lsi-find-section {
      margin-bottom: 3rem;

      h2 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: map-get($map: $color, $key: btn-bg);
      }

      p {
        font-size: 1.2rem;
        margin-bottom: 2rem;
        color: map-get($map: $color, $key: btn-bg);
      }

      input[type="text"] {
        @include inputText();
        width: 100%;
        margin-bottom: 10px;
        &:focus {
          border: 1px solid map-get($map: $color, $key: main);
          outline: none;
        }
      }
      .error-message {
        display: none;
        font-size: 1.2rem;
        margin-top: 10px;
        line-height: 1px;
        color: map-get($map: $color, $key: error);
      }

      .lsi-find-btn {
        @include findBtn();
        width: 100%;
        &:hover {
          color: map-get($map: $color, $key: light);
        }
      }
    }

    .lsi-separator {
      font-size: 1.4rem;
      margin: 5rem 0;
      display: flex;
      align-items: center;
      justify-content: center;
      color: map-get($map: $color, $key: main);
      gap: 15px;

      &::before,
      &::after {
        content: "";
        flex: 1;
        height: 1px;
        background-color: map-get($map: $color, $key: main);
        margin: 0 5px;
      }
    }
  }
}

@media screen and (max-width: 500px) {
  .lsi-find-id-container {
    width: 60%;
    padding: 1.5rem;

    h1 {
      font-size: 3rem;
      margin-bottom: 2rem;
    }

    .lsi-find-section {
      margin-bottom: 2rem;
      text-align: left;

      h2 {
        font-size: 1.8rem;
      }

      p {
        font-size: 1.1rem;
      }

      input[type="text"] {
        @include inputText();
        width: 100%;
        margin-bottom: 10px;
        &:focus {
          border: 1px solid map-get($map: $color, $key: main);
          outline: none;
        }
      }
      .error-message {
        display: none;
        font-size: 1rem;
        margin-top: 8px;
        line-height: 1px;
        color: map-get($map: $color, $key: error);
      }

      .lsi-find-btn {
        @include findBtn();
        width: 100%;
        &:hover {
          color: map-get($map: $color, $key: light);
        }
      }
    }

    .lsi-separator {
      font-size: 1.2rem;
      margin: 4rem 0;
      display: flex;
      align-items: center;
      justify-content: center;
      color: map-get($map: $color, $key: main);
      gap: 15px;

      &::before,
      &::after {
        content: "";
        flex: 1;
        height: 1px;
        background-color: map-get($map: $color, $key: main);
        margin: 0 5px;
      }
    }
  }
}
